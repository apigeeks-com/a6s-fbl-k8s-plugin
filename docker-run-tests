#!/bin/bash

if [[ $KIND_KEEP_ORIGINAL_CLUSTER == 0 ]]; then
    echo "-> removing kind cluster..."
    kind delete cluster

    echo "-> creating kind cluster..."
    kind create cluster
fi

exit_code=$?
if [[ $exit_code != 0 ]]; then
    echo "<- failed to create kind cluster"
    exit $exit_code
fi

# export kube config
export KUBECONFIG="$(kind get kubeconfig-path)"

echo "-> init helm..."
kubectl create serviceaccount --namespace kube-system tiller
kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'
helm init --service-account tiller --upgrade

exit_code=$?
if [[ $exit_code != 0 ]]; then
    echo "<- failed to init helm"
    exit $exit_code
fi

sleep 5
until timeout 5 helm version
do
  echo "-> tiller is not ready yet. waiting..."
  sleep 1
done

# navigate to project dir
cd /usr/app

# run tests
echo "-> building plugin..."
yarn build

echo "-> running tests..."
yarn test
exit_code=$?

if [[ $KIND_KEEP_CREATED_CLUSTER == 0 ]]; then
    echo "-> removing kind cluster..."
    kind delete cluster
fi

exit $exit_code